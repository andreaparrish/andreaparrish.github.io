/* main.css 3.0.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * Note to self: these defaults come from HTML5 Boilerplate.
 * They smooth out browser quirks so I start from a stable base.
 */

/* ==========================================================================
   Base styles: my default text sizing and rhythm
   ========================================================================== */

html {
  color: #222; /* default text color before I override with variables */
  font-size: 1em; /* start at 16px (browser default) */
  line-height: 1.4; /* comfy reading line height */
}

/*
 * Clean <hr> so it looks simple and not chunky.
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Align media elements so there’s no tiny gap below images/videos/iframes.
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Reset fieldset so forms don’t get weird default borders.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Only allow textareas to resize vertically so layout doesn’t break.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   no-js / js stuff
   ========================================================================== */

/* Hide interactive UI when JS is off */
.no-js .requires-js {
  display: none;
}

/* Optional: style the <noscript> message */
.no-js-msg {
  background: #fff3cd;
  color: #664d03;
  padding: 0.75rem;
  border-radius: 0.5rem;
}

/* ==========================================================================
   Author's custom styles (my stuff starts here)
   ========================================================================== */

/* 1) Design tokens: variables I’ll reuse everywhere */
:root {
  /* colors */
  --bg: #ffffff; /* page background */
  --text: #111111; /* main text */
  --muted-text: #555555; /* secondary text */
  --surface: #f7f7f9; /* card/background panels */
  --border: #e5e7eb; /* subtle borders */
  --accent: #4f46e5; /* links, buttons, highlights */
  --accent-contrast: #ffffff; /* text on accent */
  color-scheme: light;

  /* spacing scale (use these instead of random numbers) */
  --space-1: 0.25rem;
  --space-2: 0.5rem;
  --space-3: 0.75rem;
  --space-4: 1rem;
  --space-6: 1.5rem;
  --space-8: 2rem;

  /* rounded corners and a soft shadow */
  --radius: 12px;
  --shadow-1: 0 1px 2px rgba(0, 0, 0, 0.06), 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* Optional dark theme: flip variable values by adding class to <html> */
.theme-dark-a {
  --bg: #0b0b0f;
  --text: #e7e7ea;
  --muted-text: #a3a3ad;
  --surface: #15151b;
  --border: #2b2b35;
  --accent: #a78bfa;
  --accent-contrast: #0b0b0f;
  color-scheme: dark;
}

/* Base overrides that use my variables (wins over earlier defaults) */
html,
body {
  background: var(--bg);
  color: var(--text);
  transition: background-color 0.2s linear, color 0.2s linear;
}

@media (prefers-reduced-motion: reduce) {
  html,
  body {
    transition: none;
  }
}

/* Make sizing predictable across elements */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Links use accent color. Hover gets an underline for clarity. */
a {
  color: var(--accent);
  text-decoration: none;
}
a:hover {
  text-decoration: underline;
}

/* Selection should match my accent, with readable text color. */
::selection {
  background: var(--accent);
  color: var(--accent-contrast);
}
::-moz-selection {
  background: var(--accent);
  color: var(--accent-contrast);
}

/* hr uses my border variable so it matches the rest of the UI */
hr {
  border-top: 1px solid var(--border);
}

/* Simple layout helpers I’ll actually use */
.container {
  width: min(100% - 2rem, 72rem);
  margin-inline: auto;
}
.card {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  box-shadow: var(--shadow-1);
  padding: var(--space-4);
}

/* Buttons share one look so the site feels consistent */
.btn {
  display: inline-block;
  background: var(--accent);
  color: var(--accent-contrast);
  border: 0;
  border-radius: 0.6rem;
  padding: 0.6rem 1rem;
  cursor: pointer;
}

/* better focus styling */
.btn:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}
.btn:focus {
  outline: none;
} /* let :focus-visible handle it */

/* Skip link so keyboard users can jump to main content */
.skip-link {
  position: absolute;
  left: -9999px;
  top: auto;
  background: var(--accent);
  color: var(--accent-contrast);
  padding: 0.5rem 0.75rem;
  border-radius: 0.5rem;
}
.skip-link:focus {
  left: 1rem;
  top: 1rem;
  z-index: 1000;
}

/* Quick 2-column grid I can reuse for dashboard cards */
@media (min-width: 48rem) {
  .grid-2 {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-4);
  }
}

/* ==========================================================================
   Helper classes (tiny utilities for special cases)
   ========================================================================== */

/*
 * Completely hide things, including from screen readers.
 * Use sparingly. If content should be read by screen readers, use .visually-hidden instead.
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide visually but keep available for screen readers.
 * Good for extra labels or explanations.
 *
 * 1) Note: long text can wrap weirdly if the container is too narrow.
 */

.visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap; /* 1 */
  width: 1px;
}

/*
 * Same as above but allow it to become visible when focused.
 * Useful for “Skip to content” links.
 */

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Keep space in the layout but hide the element visually.
 * Handy for temporarily hiding something without shifting the layout.
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: only needed if I use floats (I probably won’t).
 * I can delete this later if I never use float-based layouts.
 */

.clearfix::before,
.clearfix::after {
  content: "";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   Example media queries (placeholders I’ll fill in as I design)
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Put tablet+ adjustments here when I need them */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* High-DPI tweaks if I notice any blurriness on retina displays */
}

/* ==========================================================================
   Print styles (make printed pages readable and ink-friendly)
   ========================================================================== */

@media print {
  *,
  *::before,
  *::after {
    background: #fff !important; /* white background prints faster/cleaner */
    color: #000 !important; /* black text for contrast */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline; /* underline links on paper */
  }

  a[href]::after {
    content: " (" attr(href) ")"; /* show the URL after the link */
  }

  abbr[title]::after {
    content: " (" attr(title) ")"; /* expand abbreviations */
  }

  /*
   * Don’t print “#fragment” or javascript: links after anchors.
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important; /* wrap long code blocks on paper */
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  tr,
  img {
    page-break-inside: avoid; /* keep rows/images together */
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; /* avoid lonely lines at page breaks */
  }

  h2,
  h3 {
    page-break-after: avoid; /* keep headings with their content */
  }
}
