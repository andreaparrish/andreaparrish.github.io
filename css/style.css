/* ==========================================================================
   BALANCE PLANNER - MAIN STYLESHEET
   ========================================================================== */
/*
 * A comprehensive stylesheet for the Balance Planner web application.
 * This file contains all styles organized by functionality and scope.
 * 
 * Table of Contents:
 * 1. CSS Reset & Base Styles
 * 2. Design System (Variables & Tokens)
 * 3. Layout & Structure
 * 4. Navigation Components
 * 5. Dashboard Components
 * 6. Form Components
 * 7. Utility Classes
 * 8. Responsive Design
 * 9. Print Styles
 * 10. Accessibility Features
 */

/* ==========================================================================
   1. CSS RESET & BASE STYLES
   ========================================================================== */
/*
 * Based on HTML5 Boilerplate with custom modifications.
 * Provides a consistent foundation across all browsers.
 */

/* Base HTML element styling */
html {
  color: #222; /* Default text color before CSS variables override */
  font-size: 1em; /* 16px base font size */
  line-height: 1.4; /* Comfortable reading line height */
}

/* Universal box-sizing for predictable layouts */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Clean horizontal rule styling */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/* Media element alignment to prevent gaps */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/* Form element resets */
fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

textarea {
  resize: vertical; /* Only allow vertical resizing to prevent layout breaks */
}

/* ==========================================================================
   2. DESIGN SYSTEM - CSS VARIABLES & TOKENS
   ========================================================================== */
/*
 * Centralized design tokens for consistent styling across the application.
 * These variables make it easy to maintain brand consistency and implement
 * theme changes.
 */

:root {
  /* Font */
  --font-sans: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji",
    "Segoe UI Emoji", sans-serif;

  /* Color Palette */
  --bg: #ffffff; /* Primary background color */
  --text: #111111; /* Primary text color */
  --muted-text: #555555; /* Secondary/subdued text */
  --surface: #f7f7f9; /* Card and panel backgrounds */
  --border: #e5e7eb; /* Subtle borders and dividers */
  --accent: #4f46e5; /* Brand accent color for links, buttons */
  --accent-contrast: #ffffff; /* Text color on accent backgrounds */
  color-scheme: light; /* Browser UI color scheme hint */

  /* Spacing Scale - Use these instead of arbitrary values */
  --space-1: 0.25rem; /* 4px */
  --space-2: 0.5rem; /* 8px */
  --space-3: 0.75rem; /* 12px */
  --space-4: 1rem; /* 16px */
  --space-6: 1.5rem; /* 24px */
  --space-8: 2rem; /* 32px */

  /* Visual Effects */
  --radius: 12px; /* Border radius for cards, buttons, etc. */
  --shadow-1: 0 1px 2px rgba(0, 0, 0, 0.06), 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* Dark Theme Override */
/*
 * To activate dark theme, add 'theme-dark-a' class to the <html> element.
 * This provides an alternative color scheme for users who prefer dark interfaces.
 */
.theme-dark-a {
  --bg: #0b0b0f;
  --text: #e7e7ea;
  --muted-text: #a3a3ad;
  --surface: #15151b;
  --border: #2b2b35;
  --accent: #a78bfa;
  --accent-contrast: #0b0b0f;
  color-scheme: dark;
}

/* ==========================================================================
   3. LAYOUT & STRUCTURE
   ========================================================================== */
/*
 * Core layout components and structural elements.
 * These provide the foundation for page layouts and content organization.
 */

/* Base body styling with theme support */
html,
body {
  font-family: var(--font-sans);
  background: var(--bg);
  color: var(--text);
  transition: background-color 0.2s linear, color 0.2s linear;
}

/* Respect user's motion preferences */
@media (prefers-reduced-motion: reduce) {
  html,
  body {
    transition: none;
  }
}

/* Main container for content width and centering */
.container {
  width: min(100% - 2rem, 72rem); /* Responsive width with max constraint */
  margin-inline: auto; /* Center horizontally */
}

/* Card component for content sections */
.card {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  box-shadow: var(--shadow-1);
  padding: var(--space-4);
}

/* Two-column grid layout for dashboard cards */
@media (min-width: 48rem) {
  .grid-2 {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-4);
  }
}

/* ==========================================================================
   4. NAVIGATION COMPONENTS
   ========================================================================== */
/*
 * Navigation styling for the main site navigation.
 * Includes responsive behavior and accessibility features.
 */

.main-nav ul {
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
  gap: var(--space-4);
  align-items: center;
  font-size: 1rem; /* This will apply to all children consistently */
}

.main-nav a {
  display: block;
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius);
  text-decoration: none;
  transition: background-color 0.2s ease;
  font-size: 1rem;
  /* Add button-like styling */
  border: 1px solid transparent;
  background: transparent;
  cursor: pointer;
}

.main-nav a:hover,
.main-nav a:focus {
  background: var(--surface);
  border-color: var(--border);
}

.main-nav a.active {
  background: var(--accent);
  color: var(--accent-contrast);
}

/* Theme toggle button styling */
.theme-toggle {
  padding: var(--space-2);
  background: transparent;
  border: 1px solid var(--border);
  border-radius: var(--radius);
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: inherit; /* This will inherit from .main-nav ul */
}

.theme-toggle:hover,
.theme-toggle:focus {
  background: var(--surface);
  border-color: var(--accent);
}

.theme-toggle svg {
  width: 20px;
  height: 20px;
  color: var(--text);
}

/* Mobile navigation - stack vertically on small screens */
@media (max-width: 47.99rem) {
  .main-nav ul {
    flex-direction: column;
    gap: var(--space-2);
  }
}

/* ==========================================================================
   5. DASHBOARD COMPONENTS
   ========================================================================== */
/*
 * Dashboard-specific styling for the main application interface.
 * Includes overview cards, statistics, and dashboard layout.
 */

.dashboard-overview h2 {
  margin-bottom: var(--space-4);
}

/* Overview cards grid layout */
.overview-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--space-4);
  margin-bottom: var(--space-8);
}

.overview-card {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: var(--space-4);
  text-align: center;
}

.overview-card h3 {
  margin: 0 0 var(--space-2) 0;
  color: var(--accent);
}

.task-count,
.journal-count {
  margin: 0;
  font-size: 1.2em;
  font-weight: bold;
}

/* ==========================================================================
   6. FORM COMPONENTS
   ========================================================================== */
/*
 * Form styling for user input elements.
 * Includes journal forms, task forms, and other input components.
 */

#journalForm {
  display: grid;
  gap: var(--space-3);
  margin-bottom: var(--space-6);
}

#journalForm label {
  font-weight: bold;
  color: var(--accent);
}

#journalText {
  min-height: 100px;
  font-family: inherit;
}

/* ==========================================================================
   7. BUTTONS & INTERACTIVE ELEMENTS
   ========================================================================== */
/*
 * Button styling and interactive element states.
 * Ensures consistent interaction patterns across the application.
 */

/* Primary button styling */
.btn {
  display: inline-block;
  background: var(--accent);
  color: var(--accent-contrast);
  border: 0;
  border-radius: 0.6rem;
  padding: 0.6rem 1rem;
  cursor: pointer;
}

/* Enhanced focus styling for accessibility */
.btn:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

.btn:focus {
  outline: none; /* Let :focus-visible handle focus styling */
}

/* ==========================================================================
   8. TYPOGRAPHY & TEXT STYLING
   ========================================================================== */
/*
 * Text styling, links, and typography rules.
 * Ensures consistent text appearance and interaction states.
 */

/* Link styling with hover states */
a {
  color: var(--accent);
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* Text selection styling */
::selection {
  background: var(--accent);
  color: var(--accent-contrast);
}

::-moz-selection {
  background: var(--accent);
  color: var(--accent-contrast);
}

/* Update hr to use design system colors */
hr {
  border-top: 1px solid var(--border);
}

/* ==========================================================================
   9. PAGE-SPECIFIC STYLES
   ========================================================================== */
/*
 * Styles specific to individual pages or sections.
 * Organized by page/component for easy maintenance.
 */

/* Page header styling */
.page-header {
  margin-top: var(--space-4); /* Add space above the page header */
  margin-bottom: var(--space-4);
}

.page-header h2 {
  margin: 0 0 var(--space-2) 0;
  color: var(--accent);
}

/* Task and journal sections */
.task-section,
.journal-section {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: var(--space-4);
}

/* Journal entry styling */
.journal-entry {
  background: var(--bg);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: var(--space-3);
  margin-bottom: var(--space-3);
}

.journal-entry h4 {
  margin: 0 0 var(--space-2) 0;
  color: var(--accent);
  font-size: 0.9em;
}

.journal-entry p {
  margin: 0;
  white-space: pre-wrap; /* Preserve line breaks in journal entries */
}

/* ==========================================================================
   10. UTILITY CLASSES
   ========================================================================== */
/*
 * Small, reusable utility classes for common styling needs.
 * Use these for quick styling adjustments without creating new components.
 */

/* Visibility utilities */
.hidden,
[hidden] {
  display: none !important;
}

.visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

.invisible {
  visibility: hidden;
}

/* Layout utilities */
.clearfix::before,
.clearfix::after {
  content: "";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   11. ACCESSIBILITY FEATURES
   ========================================================================== */
/*
 * Accessibility-focused styling and features.
 * Ensures the application is usable by all users, including those using
 * assistive technologies.
 */

/* Skip link for keyboard navigation */
.skip-link {
  position: absolute;
  left: -9999px;
  top: auto;
  background: var(--accent);
  color: var(--accent-contrast);
  padding: 0.5rem 0.75rem;
  border-radius: 0.5rem;
}

.skip-link:focus {
  left: 1rem;
  top: 1rem;
  z-index: 1000;
}

/* JavaScript dependency handling */
.no-js .requires-js {
  display: none;
}

.no-js-msg {
  background: #fff3cd;
  color: #664d03;
  padding: 0.75rem;
  border-radius: 0.5rem;
}

/* ==========================================================================
   12. RESPONSIVE DESIGN
   ========================================================================== */
/*
 * Media queries for responsive behavior across different screen sizes.
 * Organized from smallest to largest breakpoints.
 */

/* Tablet and larger screens */
@media only screen and (min-width: 35em) {
  /* Add tablet-specific adjustments here as needed */
}

/* High-DPI display optimizations */
@media print, (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi) {
  /* High-DPI display tweaks for crisp rendering */
}

/* ==========================================================================
   13. PRINT STYLES
   ========================================================================== */
/*
 * Optimized styling for printed pages.
 * Ensures content is readable and ink-friendly when printed.
 */

@media print {
  /* Reset all colors and effects for print */
  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }

  /* Make links visible on paper */
  a,
  a:visited {
    text-decoration: underline;
  }

  /* Show URLs after links */
  a[href]::after {
    content: " (" attr(href) ")";
  }

  /* Expand abbreviations */
  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /* Don't print fragment or javascript links */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  /* Code and quote formatting */
  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /* Prevent awkward page breaks */
  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}
